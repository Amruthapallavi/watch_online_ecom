<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <!-- <link rel="stylesheet" href="/userHome.css"> -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link href="https://unpkg.com/cropperjs/dist/cropper.css" rel="stylesheet"/>

  
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Work+Sans&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/css/style.css">

  <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">

  <link href="https://unpkg.com/cropperjs/dist/cropper.css" rel="stylesheet"/>


  <style>
      body {
          font-family: Arial, sans-serif;
          background-color: #f9f9f9;
      }
      .container {
          padding: 30px;
          width: 100%;
          margin: 30px auto;
          background: #ffffff;
          border-radius: 8px;
          box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.1);
      }
      h2 {
          color: #333;
          text-align: center;
          font-size: 24px;
          margin-bottom: 20px;
      }
      .form-group {
          margin-bottom: 20px;
      }
      label {
          display: block;
          margin-bottom: 8px;
          color: #555;
          font-weight: bold;
          font-size: 15px;
      }
      input[type="text"],
      input[type="number"],
      select,
      input[type="file"],
      textarea {
          width: 100%;
          padding: 12px;
          border: 1px solid #ccc;
          border-radius: 5px;
          box-sizing: border-box;
          transition: border 0.3s ease;
      }
      input[type="text"]:focus,
      input[type="number"]:focus,
      select:focus,
      textarea:focus {
          border: 1px solid #333;
      }
      input[type="submit"] {
          background-color: #333;
          color: white;
          padding: 12px;
          border: none;
          border-radius: 5px;
          cursor: pointer;
          font-size: 18px;
          transition: background-color 0.3s ease;
          width: 100%;
          margin-top: 10px;
      }
      input[type="submit"]:hover {
          background-color: #555;
      }
      .image-preview {
          display: flex;
          flex-wrap: wrap;
          gap: 15px;
          margin-bottom: 20px;
      }
      .image-preview .image-container {
          position: relative;
          width: 100px;
          height: 100px;
          border: 1px solid #ddd;
          border-radius: 5px;
          overflow: hidden;
          transition: transform 0.3s;
      }
      .image-preview .image-container:hover {
          transform: scale(1.05);
      }
      .image-preview img {
          width: 100%;
          height: 100%;
          object-fit: cover;
      }
      .image-preview button {
          position: absolute;
          top: 5px;
          right: 5px;
          background-color: red;
          color: white;
          border: none;
          padding: 2px 5px;
          border-radius: 3px;
          cursor: pointer;
          font-size: 10px;
      }
      #cropModal {
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: rgba(0, 0, 0, 0.6);
          display: none;
          justify-content: center;
          align-items: center;
          z-index: 1000;
      }
      .modal-content {
          background-color: white;
          padding: 20px;
          border-radius: 8px;
          max-width: 600px;
          width: 90%;
          box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
      }
      #cropButton {
          background-color: #333;
          color: white;
          padding: 10px;
          border: none;
          border-radius: 5px;
          cursor: pointer;
          font-size: 14px;
          margin-top: 10px;
      }
      #cropButton:hover {
          background-color: #555;
      }
  </style>
    <link rel="stylesheet" href="/css/style.css">

</head>
<body>

     <nav class="navbar navbar-expand-lg navbar-dark bg-black" style="min-height: 85px; margin-top: 0; max-height: 100px; max-width: 100%;" >
        <div class = "container" style="background-color: black;">
            <a href="/adminHome" class="navbar-brand"><i class="fas fa-code me-2"></i>ADMIN-HOME</a>
            <button class="navbar-toggler" data-bs-target="#my-nav"
            data-bs-toggle="collapse" aria-controls="my-nav" aria-expanded="false"
            aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div id="my-nav" class="collapse navbar-collapse">
                <u1 class = "navbar-nav ms-auto">
                    <li class="nav-item active">
                        <a class="nav-link" href="/adminHome"><i class = "fas fa-home me-i"></i>Home</a>
                    </li>
                    <li class="nav-item active">
                        <a class="nav-link" href="/users"><i class="fas fa-user-plus me-1"></i>Users</a>
                    </li> 

                    <li class="nav-item active">
                        <a class="nav-link" href="/products"><i class="fas fa-user-plus me-1"></i>Products</a>
                    </li>
                    <li class="nav-item active">
                      <a class="nav-link" href="/orders"><i class="fas fa-user-plus me-1"></i>Orders</a>
                  </li>
                    <li class="nav-item active">
                        <a class="nav-link" href="/category"><i class="fas fa-user-plus me-1"></i>Category</a>
                    </li> 
                    <li class="nav-item active">
                        <a class="nav-link" href="/adminCoupon"><i class="fas fa-user-plus me-1"></i>Offers</a>
                    </li>
                    <!-- <li class="nav-item active">
                        <a class="nav-link" href="#"><i class="fas fa-globe me-1"></i>Cart</a>
                    </li> -->
                    <li class="nav-item active">
                       <li> <a href="/adminLogout">
   <button class="btn btn-light" style="width: 100px; height:35px; font-size:15px; font-weight:600" type="submit"> Log out</button>
  </a></li>
                    </li>
                </u1>
            </div>
        </div>
    </nav> 

    <div class="container" style="max-width: 800px;">
        <h2>Edit Product</h2>
        <form id="productForm" action="/edit-product/<%= data._id %>" method="POST" enctype="multipart/form-data">
            <div class="form-group">
                <label for="name">Product Name:</label>
                <input type="text" id="name" name="pname" value="<%= data.pname %>" required>
            </div>
            <div class="form-group">
                <label for="category">Category:</label>
                <select id="category" name="category">
                    <% catData.forEach(function(item) { %>
                        <option value="<%= item._id %>" <%= item._id.equals(data.category) ? 'selected' : '' %>><%= item.cname %></option>
                    <% }); %>
                </select>
            </div>
            <div class="form-group">
                <label for="quantity">Quantity:</label>
                <input type="number" id="quantity" name="quantity" value="<%= data.quantity %>" required>
            </div>
            <div class="form-group">
                <label for="image">Product Images:</label>
                <div id="imagePreview" class="image-preview">
                  <% if (data.image && data.image.length > 0) { %>
                        <% data.image.forEach(function(image) { %>
                            <div class="image-container">
                                <img src="/<%= image %>" alt="Product Image">
                                <button type="button" class="delete-image" onclick="confirmDelete(this)">Delete</button>
                                <input type="hidden" name="existingImages" value="<%= image %>">
                                <input type="hidden" value="<%= image %>"> <!-- This will be used for deletion -->
                            </div>
                        <% }); %>
                    <% } %>
                </div>
                <input type="file" id="productImages" name="image" multiple accept="image/*">
            </div>
            <div class="form-group">
                <label for="price">Price:</label>
                <input type="number" id="price" name="price" value="<%= data.price %>" required>
            </div>
            <div class="form-group">
                <label for="description">Description:</label>
                <input type="text" id="description" name="description" value="<%= data.description %>" required>
            </div>
            <div class="form-group">
                <input type="submit" value="Submit">
            </div>
        </form>
    
        <div id="cropModal">
            <div class="modal-content">
                <img id="imageToCrop" style="max-width: 100%;">
                <button id="cropButton">Crop</button>
            </div>
        </div>
    </div>
    
    <script src="https://unpkg.com/cropperjs"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let cropper;
        let selectedFiles = [];
        const productImages = document.getElementById('productImages');
        const imagePreview = document.getElementById('imagePreview');
        const cropModal = document.getElementById('cropModal');
        const imageToCrop = document.getElementById('imageToCrop');
        const cropButton = document.getElementById('cropButton');
        let currentFileIndex = 0;
        let croppedImages = [];
        let deletedImages = []; // Declare a global variable to store deleted images
    
        productImages.addEventListener('change', function(event) {
            selectedFiles = Array.from(event.target.files);
            currentFileIndex = 0;
            if (selectedFiles.length > 0) {
                processNextImage();
            }
        });
    
        function processNextImage() {
            if (currentFileIndex < selectedFiles.length) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    imageToCrop.src = e.target.result;
                    cropModal.style.display = 'flex';
    
                    if (cropper) cropper.destroy();
                    cropper = new Cropper(imageToCrop, {
                        aspectRatio: 1,
                        viewMode: 1,
                    });
                };
                reader.readAsDataURL(selectedFiles[currentFileIndex]);
            } else {
                cropModal.style.display = 'none';
            }
        }
    
        cropButton.addEventListener('click', function() {
            const canvas = cropper.getCroppedCanvas();
            const croppedImage = canvas.toDataURL();
            croppedImages.push(croppedImage);
    
            const imageContainer = document.createElement('div');
            imageContainer.classList.add('image-container');
    
            const img = document.createElement('img');
            img.src = croppedImage;
            imageContainer.appendChild(img);
    
            const deleteButton = document.createElement('button');
            deleteButton.textContent = 'X';
            deleteButton.classList.add('delete-image');
            deleteButton.addEventListener('click', function() {
                imageContainer.remove();
            });
            imageContainer.appendChild(deleteButton);
    
            imagePreview.appendChild(imageContainer);
            cropModal.style.display = 'none';
            cropper.destroy();
    
            currentFileIndex++;
            processNextImage();
        });
    
        document.getElementById('productForm').addEventListener('submit', function(event) {
            // Add cropped images
            croppedImages.forEach((croppedImage, index) => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = `croppedImage_${index}`;
                input.value = croppedImage;
                event.target.appendChild(input);
            });
    
            // Add deleted images
            deletedImages.forEach((deletedImage) => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'deletedImages'; // Use an array-like format for multiple values
                input.value = deletedImage;
                event.target.appendChild(input);
            });
        });
    
        function confirmDelete(button) {
            const imageName = button.nextElementSibling.value; // Get the image name from the second hidden input
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!',
            }).then((result) => {
                if (result.isConfirmed) {
                    deletedImages.push(imageName); // Add to the deletedImages array
                    button.parentElement.remove(); // Remove the image from the DOM
                }
            });
        }
    </script>
    