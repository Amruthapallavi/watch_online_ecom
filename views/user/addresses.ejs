<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User_Home</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="/css/addresses.css">
</head>
<body>
  <nav class="navbar">
    <div class="navbar-left">
      <span class="brand">TickTrack</span>
    </div>
    <div class="navbar-center">
      <form class="search-form" action="/search" method="POST">
        <input type="text" name="String" class="search-bar" placeholder="Search...">
        <button type="submit" class="search-button">Go</button>
      </form>
    </div>
    <div class="navbar-right">
      <a href="/userHome" class="nav-item">Home</a>
      <a href="/shop" class="nav-item">Shop</a>
      <div class="dropdown">
        <a href="/account" class="nav-item dropdown-toggle">My Account</a>
        <div class="dropdown-menu">
          <a href="/user-account" class="dropdown-item">Profile</a>
          <a href="#settings" class="dropdown-item">Settings</a>
        </div>
      </div>
      <a href="/wishlist" class="nav-item">‚ù§Ô∏è</a>
      <a href="/cart" class="nav-item">üõí</a>
      <a href="/userLogout" class="nav-item logout">Logout</a>
    </div>
  </nav>

  <!-- Main Checkout Container -->
   <!-- <button>Back To Profile</button> -->
  <div class="checkout-container">
    <!-- Address Section -->
    <div class="address-section">
      <h2>Your Addresses</h2>
      <% addresses.forEach((address) => { %>
        <div class="address-card">
          <input type="radio" name="address" checked>
          <div class="address-details">
            
            <p><%= address.name%>,<%=address.house_no%> <%= address.street %>, <%= address.city %>, <%= address.locality %>, <%= address.district %>, <%= address.phone %></p>
            <span>PIN: <%= address.pincode %>, <%= address.state %></span>
            <a href="/edit-address/<%=address._id%>" class="edit-address-btn" data-id="<%= address.id %>">Edit Address</a> 
            <form action="/delete-address/<%= address._id %>" method="POST" onclick="return deleteAddress(this);">                   
             <button class="delete-button" style="background-color: black;"><a href="/delete-address/<%= address._id %>" style="text-decoration: none; color: white; " > <strong>Delete</strong> </a></button><br></form>

          </div>
        </div>
      <% }) %>
      <button class="btn add-address-btn" id="addAddressBtn">Add New Address</button>       <button class="btn add-address-btn" id="addAddressBtn">
       <a href="/cart" style="text-decoration: none;color: white;"> Go to Cart</a></button>

    </div>

    <!-- Add Address Form -->
    <div class="form-container" id="addressForm" style="display: none;">
      <div class="form-header">New Address</div>
      <form id="newAddressForm" action="/add-address" method="POST" onsubmit="return submitForm(this);">
        <input type="text" id="name" name="name" placeholder="Full Name" required>
        <input type="number" id="phone" name="phone" placeholder="Phone Number" required>
        <small id="phoneError" class="error-message" style="display: none;">Invalid phone number</small>

        <input type="text" id="house_no" name="house_no" placeholder="House No" required>
        <input type="text" id="street" name="street" placeholder="Street" required>
        <input type="text" id="locality" name="locality" placeholder="Locality" required>
        <input type="text" id="city" name="city" placeholder="City" required>
        <input type="number" id="pincode" name="pincode" placeholder="Pincode" required>
        <small id="pincodeError" class="error-message" style="display: none;">Invalid pincode</small>

        <input type="text" id="district" name="district" placeholder="District" required>
        <input type="text" id="state" name="state" placeholder="State" required>
        <input type="submit" value="Save address">
      </form>
    </div>

    <!-- Edit Address Form -->
    <div class="form-container" id="editAddressForm" style="display: none;">
      <div class="form-header">Edit Address</div>
      <form id="editAddress" action="/edit-address" method="POST" onclick="return editForm(this);">
        <input type="hidden" id="editAddressId" name="id">
        <input type="text" id="editName" name="name" placeholder="Name" required>
        <input type="tel" id="editPhone" name="phone" placeholder="Phone" required>
        <small id="editPhoneError" class="error-message" style="display: none;">Invalid phone number</small>

        <input type="text" id="editHouseNo" name="house_no" placeholder="House No." required>
        <input type="text" id="editStreet" name="street" placeholder="Street" required>
        <input type="text" id="editLocality" name="locality" placeholder="Locality" required>
        <input type="text" id="editCity" name="city" placeholder="City" required>
        <input type="text" id="editDistrict" name="district" placeholder="District" required>
        <input type="text" id="editPincode" name="pincode" placeholder="Pincode" required>
        <small id="editPincodeError" class="error-message" style="display: none;">Invalid pincode</small>

        <input type="text" id="editState" name="state" placeholder="State" required>
        <button type="submit" class="btn">Save Address</button>
      </form>
    </div>
  </div>

  <script>
    document.getElementById('addAddressBtn').addEventListener('click', function () {
      const form = document.getElementById('addressForm');
      form.style.display = form.style.display === 'none' ? 'block' : 'none';
    });

    document.querySelectorAll('.edit-address-btn').forEach(btn => {
      btn.addEventListener('click', function () {
        const id = this.getAttribute('data-id');
        // Fetch and populate the form fields
        fetch(`/get-address/${id}`)
          .then(res => res.json())
          .then(data => {
            document.getElementById('editAddressId').value = data.id;
            document.getElementById('editName').value = data.name;
            document.getElementById('editPhone').value = data.phone;
            // Populate other fields similarly
            document.getElementById('editAddressForm').style.display = 'block';
          });
      });
    });

    document.addEventListener('DOMContentLoaded', function () {
      const phoneInput = document.getElementById('phone');
      const phoneError = document.getElementById('phoneError');
      const pincodeInput = document.getElementById('pincode');
      const pincodeError = document.getElementById('pincodeError');
      const form = document.getElementById('newAddressForm');

      function isValidPhone(value) {
        return /^\d{10}$/.test(value);
      }

      function isValidPincode(value) {
        return /^\d{6}$/.test(value);
      }

      function updateErrorMessages() {
        const phoneValue = phoneInput.value;
        const pincodeValue = pincodeInput.value;

        phoneError.style.display = isValidPhone(phoneValue) ? 'none' : 'block';
        pincodeError.style.display = isValidPincode(pincodeValue) ? 'none' : 'block';
      }

      phoneInput.addEventListener('input', updateErrorMessages);
      pincodeInput.addEventListener('input', updateErrorMessages);

      form.addEventListener('submit', function (e) {
        updateErrorMessages();

        if (!isValidPhone(phoneInput.value) || !isValidPincode(pincodeInput.value)) {
          alert('Please correct the errors before submitting.');
        }
      });
    });



      function submitForm(form){
        swal({
  title: "Successfull!",
  text: "Your address added successfully",
  icon: "success",
  button: "Ok",
}).then((isOkay)=>{
          if(isOkay){
            form.submit();
          }
        });
        return false;
      }

      
      function editForm(form){
        swal({
  title: "Successfull!",
  text: "Your address edited successfully",
  icon: "success",
  button: "Ok",
}).then((isOkay)=>{
          if(isOkay){
            form.submit();
          }
        });
        return false;
      }

      function deleteAddress(form){
        swal("Are you sure to delete this address?", {
  buttons: ["Cancel", "Delete"],
}).then((isOkay)=>{
          if(isOkay){
            form.submit();
          }
        });
        return false;
      }
      

    document.addEventListener('DOMContentLoaded', function () {
  document.getElementById('newAddressForm').addEventListener('submit', function (e) {

    const form = this;
    const formData = new FormData(form);

    fetch(form.action, {
      method: 'POST',
      body: formData,
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        Swal.fire({
          icon: 'success',
          title: 'Success!',
          text: 'Address successfully added.',
        }).then(() => {
          // Optionally, you can redirect or refresh the page after the alert
          location.reload(); // Reload the page to reflect the new address
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: data.message || 'An error occurred while adding the address.',
        });
      }
    })
    .catch(error => {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'An unexpected error occurred.',
      });
    });
  });
});

  </script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<%- include('../include/userFooter') %>

