<%- include('../include/userHeader.ejs') %>

<link rel="stylesheet" href="/css/checkOut.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css">

<main>
    <form action="/place-order" method="POST" class="form">
        <section class="address-section">
            <% addressData.forEach(data => { %>
                <div class="address-card">
                    <input type="radio" name="address" value="<%=data._id%>">
                    <div class="address-details">
                        <p> <%=data.name%>  <%=data.street%> <%=data.city%>, <%=data.locality %>, <%=data.city%>, <%=data.district%>, <%=data.pincode%></p>
                        <p> Phone:<%=data.phone%>,<%=data.state%></p>
                        <a href="/edit-address/<%=data._id%>" class="edit-address-btn" data-id="<%= data.id %>">Edit Address</a> 
                    </div>
                </div>
            <% }) %>

            <button class="add-address-btn">
                <a href="/addresses" style="text-decoration: none; color: white;">Add new Address</a>
            </button>
        </section>

        <section class="order-summary">
            <div class="summary-details">
                <p>Subtotal: <%= grandTotal %>/-</p>
                <p>coupon discount: -<%=couponDiscount%></p>
                <p>Delivery charge: +<%= flat_rate%>/-</p>

                <hr>
                <h3>Total: ₹ <%= Math.round(grandTotal + 30 - couponDiscount) %></h3>
                <input type="hidden" name="total" id="total" value="<%= Math.round(grandTotal + 30 - couponDiscount) %>">
            </div>
        </section>

        <section class="payment-section">
            <h2>Payment</h2>
            <h3>Select payment method</h3>
            <div class="payment-option">
                <input type="radio" name="payment" id="wallet" value="wallet">
                <label for="wallet">Wallet - Available Amount: <span style="color: green;"><b><%=walletAmount%> /-</b></span></label>
            </div>
            <div class="payment-option">
                <input type="radio" name="payment" id="razorpay" value="razorpay">
                <label for="razorpay">Razor Pay</label>
            </div>
            <div class="payment-option">
                <input type="radio" name="payment" id="emi" value="emi">
                <label for="emi">EMI Options</label>
            </div>
            <div class="payment-option">
                <input type="radio" name="payment" id="cod" value="COD">
                <label for="cod">Cash on Delivery / Pay on delivery</label>
            </div>
            <button type="button" class="place-order-btn">Place Your Order</button>
        </section>
    </form>
</main>

<footer>
    <div class="footer-content">
        <div class="about">Tick-Tock</div>
        <ul class="footer-links">
            <li><a href="#">About Us</a></li>
            <li><a href="#">Help Center</a></li>
            <li><a href="#">Contact Us</a></li>
            <li><a href="#">Blog</a></li>
        </ul>
    </div>
</footer>
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
document.querySelector('.place-order-btn').addEventListener('click', (event) => {
    event.preventDefault(); // Prevent default form submission

    const addressSelected = document.querySelector('input[name="address"]:checked');
    const paymentSelected = document.querySelector('input[name="payment"]:checked');
    const totalAmount = document.getElementById('total').value;

    if (!addressSelected) {
        swal("No Address Selected", "Please select a delivery address", "error");
        return;
    }

    if (!paymentSelected) {
        swal("No Payment Method Selected", "Please select a payment method", "error");
        return;
    }

    if (paymentSelected.value === 'COD' && totalAmount > 1000) {
        swal("COD Unavailable", "Cash on Delivery is not available for orders above ₹1000", "warning");
        return;
    }

    const formData = {
        address: addressSelected.value,
        payment: paymentSelected.value,
        total: totalAmount
    };

    if (paymentSelected.value === 'razorpay') {
        fetch('/place-order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData)
        })
        .then(res => res.json())
        .then(data => {

            console.log('Razorpay Order Response:', data);
            if (data.success && data.order_id) {
                const options = {
                    key: 'rzp_test_AnrHnaf2vgMvpI', 
                    amount: data.amount, 
                    currency: data.currency,
                    name: data.name,
                    description: data.description,
                    order_id: data.order_id, // Razorpay order ID
                    handler: function (response) {
                        // Verify payment
                        fetch('/verify-payment', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                razorpay_payment_id: response.razorpay_payment_id,
                                razorpay_order_id: response.razorpay_order_id,
                                razorpay_signature: response.razorpay_signature,
                                address: addressSelected.value,
                                orderId:data.orderId,
                            })
                        })
                        .then(res => res.json())
                        .then(data => {
                            if (data.success) {
                                swal("Order Placed", `Your order has been placed successfully! Order ID: ${data.id}`, "success")
                                .then(() => {
                                    window.location.href = '/order-success'; // Redirect to order success page
                                });
                            } else {
                                swal("Payment Failed", "Payment verification failed. Your order status is pending.", "error")
                                .then(() => {
                                    window.location.href = '/my-orders'; // Redirect to orders page
                                });
                            }
                        });
                    },
                    prefill: {
                        name: data.name,
                        email: data.email,
                        contact: data.contact
                    },
                    theme: {
                        color: '#F37254'
                    }
                };

                // Open Razorpay payment modal
                const rzp = new Razorpay(options);
                rzp.open();
               
            }
        });
    } else if (paymentSelected.value === 'wallet') {
        // Handle wallet payment
        fetch('/place-order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData)
        })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                // Show SweetAlert with order ID
                swal("Order Placed", `Your order has been placed successfully! Order ID: ${data.orderId}`, "success")
                .then(() => {
                    window.location.href = '/order-success'; // Redirect to order success page
                });
            } else {
                swal("Insufficient Balance", data.message || "There was an issue placing your order. Please try again.", "error");
            }
        });
    } else if (paymentSelected.value === 'COD') {
        fetch('/place-order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',            },
            body: JSON.stringify(formData)
        })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                swal("Order Placed", `Your order has been placed successfully! Order ID: ${data.orderId}`, "success")
                .then(() => {
                    window.location.href = '/order-success'; 
                    
                });
            } else {
                swal("Order Failed", "There was an issue placing your order. Please try again.", "error");
            }
        });
    }
});
</script>

<%- include('../include/userFooter') %>
