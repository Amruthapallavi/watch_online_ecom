<%- include('../include/userHeader') %>

<link rel="stylesheet" href="/css/wallet.css">
<!-- Include SweetAlert CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
</head>
<body>

<main>
  <section class="wallet-section">
    <h1>Wallet</h1>

    <div class="wallet-grid">
      <!-- Wallet Transactions Table -->
      <div class="wallet-table">
        <% if (wallet.transactionDetails && wallet.transactionDetails.length > 0) { %>
          <table>
            <thead>
              <tr>
                <th>ID</th>
                <th>Order Id</th>
                <th>Type</th>
                <th>Amount</th>
                <th>Date</th>
              </tr>
            </thead>
            <tbody>
              <% wallet.transactionDetails.forEach((transaction, index) => { %>
                <tr>
                  <td>#<%= index + 1 %></td>
                  <td><%= transaction.orderId %></td>
                  <td class="<%= transaction.paymentType === 'credit' ? 'credit-type' : 'debit-type' %>">
                    <%= transaction.paymentType === 'credit' ? 'Credit' : 'Debit' %>
                  </td>
                  <td class="<%= transaction.paymentType === 'credit' ? 'credit-amount' : 'debit-amount' %>">
                    <%= transaction.paymentType === 'credit' ? '+' : '-' %> ₹<%= transaction.amount %>
                  </td>
                  <td><%= new Date(transaction.date).toLocaleDateString() %></td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        <% } else { %>
          <p>No transactions found.</p>
        <% } %>
      </div>

      <!-- Wallet Control Section -->
      <div class="wallet-controls">
        <div class="add-to-wallet">
          <input type="number" id="walletAmount" placeholder="Enter Amount">
          <button onclick="addToWallet()">Add to Wallet</button>
        </div>

        <div class="current-balance">
          <p>Current Balance</p>
          <span>₹<%= wallet.balance ? wallet.balance : 0 %></span>
        </div>
        
      </div>
    </div>
  </section>
</main>

<footer>
  <div class="footer-content">
    <!-- Your footer content here -->
  </div>
</footer>

<!-- Include SweetAlert JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  function addToWallet() {
    const amount = document.getElementById('walletAmount').value;

    // Ensure the amount is valid
    if (!amount || isNaN(amount) || amount <= 0) {
      Swal.fire('Error', 'Please enter a valid amount', 'error');
      return;
    }

    // Show confirmation dialog
    Swal.fire({
      title: 'Confirm Amount',
      text: `Are you sure you want to add ₹${amount} to your wallet?`,
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, add it!',
      cancelButtonText: 'No, cancel!',
    }).then((result) => {
      if (result.isConfirmed) {
        // Call your backend to create a payment order
        fetch('/add-money', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ amount }),
        })
        .then(response => response.json())
        .then(data => {
          if (data.orderId) {
            // Initialize Razorpay
            const options = {
              key: '<%= process.env.RAZORPAY_ID_KEY %>', // Use Razorpay key from backend
              amount: amount * 100, // Amount in paise
              currency: 'INR',
              name: 'Your Company',
              description: 'Add money to wallet',
              order_id: data.orderId, // Use the received order ID
              handler: function (response) {
                const { razorpay_payment_id, razorpay_order_id, razorpay_signature } = response;

                // Send payment details to your server
                fetch('/payment-success', {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  body: JSON.stringify({
                    paymentId: razorpay_payment_id,
                    orderId: razorpay_order_id,
                    signature: razorpay_signature,
                    amount: amount, // Send the amount to the server
                  }),
                })
                .then(response => response.json())
                .then(data => {
  if (data.success) {
    Swal.fire('Success', `Payment successful! Transaction ID: ${data.transactionId}`, 'success')
      .then(() => {
        window.location.reload(); // Reload to update the UI after the alert is closed
      });
  } else {
    Swal.fire('Error', 'Payment verification failed.', 'error')
      .then(() => {
        window.location.reload(); // Optionally reload on error if needed
      });
  }
})
                .catch(error => console.error('Error:', error));
              },
              prefill: {
                // Optionally add user details here
              },
            };

            const razorpay = new Razorpay(options);
            razorpay.open();
          } else {
            Swal.fire('Error', 'Failed to initiate payment', 'error');
          }
        })
        .catch(error => console.error('Error:', error));
      }
    });
  }
</script>

</body>
</html>
