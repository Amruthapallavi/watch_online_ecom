<%- include('../include/userHeader') %>

<link rel="stylesheet" href="/css/wallet.css">
<!-- Include SweetAlert CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
</head>
<style>
  .pagination {
    display: flex;
    justify-content: center;
    margin-top: 20px;
  }
  
  .pagination a {
    margin: 0 5px;
    padding: 10px;
    background-color: #ddd;
    text-decoration: none;
    color: black;
    border-radius: 5px;
  }
  
  .pagination a.active {
    background-color: black;
    color: white;
  }
  <style>
    /* Add some additional styles for the referral section */
    .referral-code-section {
        margin-top: 20px;
        display: flex;
        align-items: center;
    }

    .referral-code-section input {
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        flex: 1;
        margin-right: 10px;
    }

    .referral-code-section button {
        padding: 10px 15px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .referral-code-section button:hover {
        background-color: #0056b3;
    }
</style>
</style>
<body>
  <main>
    <section class="wallet-section" style="min-height: 600px;">
      <h1>Wallet</h1>
  
      <div class="wallet-grid">
        <!-- Wallet Transactions Table -->
        <div class="wallet-table">
          <% if (wallet.transactionDetails && wallet.transactionDetails.length > 0) { %>
            <table>
              <thead>
                <tr>
                  <th>ID</th>
                  <th>Order Id</th>
                  <th>Type</th>
                  <th>Amount</th>
                  <th>Date</th>
                </tr>
              </thead>
              <tbody>
                <% wallet.transactionDetails.forEach((transaction, index) => { %>
                  <tr>
                    <td>#<%= index + 1 %></td>
                    <td><%= transaction.orderId %></td>
                    <td class="<%= transaction.paymentType === 'credit' ? 'credit-type' : 'debit-type' %>">
                      <%= transaction.paymentType === 'credit' ? 'Credit' : 'Debit' %>
                    </td>
                    <td class="<%= transaction.paymentType === 'credit' ? 'credit-amount' : 'debit-amount' %>">
                      <%= transaction.paymentType === 'credit' ? '+' : '-' %> ₹<%= transaction.amount %>
                    </td>
                    <td><%= new Date(transaction.date).toLocaleDateString() %></td>
                  </tr>
                <% }); %>
              </tbody>
            </table>
          <% } else { %>
            <p>No transactions found.</p>
          <% } %>
        </div>
  
        <!-- Wallet Control Section -->
        <div class="wallet-controls">
          <div class="add-to-wallet">
            <input type="number" id="walletAmount" placeholder="Enter Amount">
            <button onclick="addToWallet()">Add to Wallet</button>
          </div>
  
          <div class="current-balance">
            <p>Current Balance</p>
            <span>₹<%= (wallet.balance ? wallet.balance : 0).toFixed(2) %></span>
          </div>
          
          <!-- Referral Code Section -->
          <div class="referral-code-section">
            <input type="text" id="referralCodeInput" placeholder="Enter Referral Code">
            <button onclick="redeemReferralCode()">Redeem Referral Code</button>
          </div>
        </div>
        
      </div>
    </section>
  </main>
<div class="pagination">
  <% if (currentPage > 1) { %>
  <a href="/my-wallet?page=<%= currentPage - 1 %>">&laquo;</a>
  <% } %>

  <% for (let i = 1; i <= totalPages; i++) { %>
  <a href="/my-wallet?page=<%= i %>" class="<%= i === currentPage ? 'active' : '' %>"><%= i %></a>
  <% } %>

  <% if (currentPage < totalPages) { %>
  <a href="/my-wallet?page=<%= currentPage + 1 %>">&raquo;</a>
  <% } %>
</div>


<!-- Include SweetAlert JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  function addToWallet() {
    const amount = document.getElementById('walletAmount').value;

    // Ensure the amount is valid
    if (!amount || isNaN(amount) || amount <= 0) {
      Swal.fire('Error', 'Please enter a valid amount', 'error');
      return;
    }

    // Show confirmation dialog
    Swal.fire({
      title: 'Confirm Amount',
      text: `Are you sure you want to add ₹${amount} to your wallet?`,
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, add it!',
      cancelButtonText: 'No, cancel!',
    }).then((result) => {
      if (result.isConfirmed) {
        // Call your backend to create a payment order
        fetch('/add-money', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ amount }),
        })
        .then(response => response.json())
        .then(data => {
          if (data.orderId) {
            // Initialize Razorpay
            const options = {
              key: '<%= process.env.RAZORPAY_ID_KEY %>', 
              amount: amount * 100, // Amount in paise
              currency: 'INR',
              name: 'Your Company',
              description: 'Add money to wallet',
              order_id: data.orderId, // Use the received order ID
              handler: function (response) {
                const { razorpay_payment_id, razorpay_order_id, razorpay_signature } = response;

                fetch('/payment-success', {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  body: JSON.stringify({
                    paymentId: razorpay_payment_id,
                    orderId: razorpay_order_id,
                    signature: razorpay_signature,
                    amount: amount, // Send the amount to the server
                  }),
                })
                .then(response => response.json())
                .then(data => {
  if (data.success) {
    Swal.fire('Success', `Payment successful! Transaction ID: ${data.transactionId}`, 'success')
      .then(() => {
        window.location.reload(); // Reload to update the UI after the alert is closed
      });
  } else {
    Swal.fire('Error', 'Payment verification failed.', 'error')
      .then(() => {
        window.location.reload(); // Optionally reload on error if needed
      });
  }
})
                .catch(error => console.error('Error:', error));
              },
              prefill: {
              },
            };

            const razorpay = new Razorpay(options);
            razorpay.open();
          } else {
            Swal.fire('Error', 'Failed to initiate payment', 'error');
          }
        })
        .catch(error => console.error('Error:', error));
      }
    });
  }
</script>
<script>
  function redeemReferralCode() {
      const referralCode = document.getElementById('referralCodeInput').value.trim();

      if (!referralCode) {
          Swal.fire({
              icon: 'warning',
              title: 'Invalid Code',
              text: 'Please enter a referral code.',
              showConfirmButton: false,
              timer: 1500
          });
          return;
      }

      fetch('/redeem-referral-code', {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json',
          },
          body: JSON.stringify({ referralCode }),
      })
      .then(response => response.json())
      .then(data => {
          if (data.success) {
              Swal.fire({
                  icon: 'success',
                  title: 'Success!',
                  text: data.message,
                  showConfirmButton: false,
                  timer: 1500
              });
          } else {
              Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: data.message,
                  showConfirmButton: false,
                  timer: 1500
              });
          }
      })
      .catch(error => {
          console.error('Error:', error);
          Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'An unexpected error occurred.',
              showConfirmButton: false,
              timer: 1500
          });
      });
  }
</script>
<%- include('../include/userFooter.ejs') %>
